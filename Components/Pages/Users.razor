@page "/users"
@using System.Text.Json
@using ProjectManagement.IService
@using ProjectManagement.Models
@using Task = System.Threading.Tasks.Task
@attribute [StreamRendering]
@inject IUserService UserService;
@inject NavigationManager _navigationManager

<PageTitle>Users</PageTitle>

<h1>Users</h1>

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addUser">
    Add User
</button>


@if (!users.Any())
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table table-striped table-hover">
        <thead>
        <tr>
            <th>UserId</th>
            <th>Firstname</th>
            <th>Lastname</th>
            <th>Email</th>
            <th>Password</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var user in users)
        {
            <tr>
                <td>@user.userId.ToString()</td>
                <td>@user.firstName</td>
                <td>@user.lastName</td>
                <td>@user.email</td>
                <td>@user.password</td>
                <td>
                    <button type="button" class="btn btn-success"
                            data-bs-toggle="modal" data-bs-target="#editUser"
                            @onclick="() => userEdit = user"><i class="fa-solid fa-pen-to-square"></i></button>
                    <button type="button" class="btn btn-danger" @onclick="() => DeleteUser(user.userId)"><i class="fa-solid fa-trash"></i></button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

<div class="modal fade" id="addUser" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <EditForm Model="User" OnSubmit="Create">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Add new user</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="mb-3">
                        <label for="firstName" class="form-label">Firstname</label>
                        <InputText type="text" @bind-Value="User.firstName" class="form-control" id="firstName"/>
                    </div>
                    <div class="mb-3">
                        <label for="lastName" class="form-label">Lastname</label>
                        <InputText type="text" @bind-Value="User.lastName" class="form-control" id="lastName"/>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <InputText type="email" @bind-Value="User.email" class="form-control" id="email"/>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <InputText type="text" @bind-Value="User.password" class="form-control" id="password"/>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" @onclick="Create" class="btn btn-primary">Add User</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@if (userEdit != null)
{
    <div class="modal fade" id="editUser" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <EditForm Model="userEdit" OnSubmit="Edit">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Add new user</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="mb-3">
                        <label for="firstName" class="form-label">Firstname</label>
                        <InputText type="text" @bind-Value="userEdit.firstName" class="form-control" id="firstName"/>
                    </div>
                    <div class="mb-3">
                        <label for="lastName" class="form-label">Lastname</label>
                        <InputText type="text" @bind-Value="userEdit.lastName" class="form-control" id="lastName"/>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <InputText type="email" @bind-Value="userEdit.email" class="form-control" id="email"/>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <InputText type="text" @bind-Value="userEdit.password" class="form-control" id="password"/>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Change</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>
}



@code {
    private List<User> users;
    private User userEdit;
    private User User = new ();

    protected override async Task OnInitializedAsync()
    {
        users = UserService.GetAll();
    }

    private void DeleteUser(string id)
    {
        Console.WriteLine(id);
        UserService.Delete(id);
        users = UserService.GetAll();
    }

    private void Create()
    {
        UserService.Add(User);
        _navigationManager.Refresh(true);
    }

    private void Edit()
    {
        UserService.Update(userEdit);
        _navigationManager.Refresh(true);
    }
    
}